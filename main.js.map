{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/webpack/bootstrap","webpack://mesto-project-ff/webpack/runtime/define property getters","webpack://mesto-project-ff/webpack/runtime/hasOwnProperty shorthand","webpack://mesto-project-ff/webpack/runtime/make namespace object","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/cards.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { placesList, createCard } from \"./cards.js\";\r\n\r\n//Конфиг http-запросов\r\nconst config = {\r\n  path: \"https://nomoreparties.co/v1\",\r\n  cohortId: \"wff-cohort-17\",\r\n  headers: {\r\n    authorization: \"1d7c5a36-10fe-4288-b8a8-123b41ec80c9\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\n//Запросы на сервер----------------------------------------------------------------\r\n\r\nconst handleRequest = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n};\r\n\r\n// Получение данных пользователя с сервера\r\nconst getUserProfile = () => {\r\n  return fetch(`${config.path}/${config.cohortId}/users/me`, {\r\n    method: \"GET\",\r\n    headers: config.headers,\r\n  }).then(handleRequest);\r\n};\r\n\r\n//Получение данных карточек\r\nconst getCards = () => {\r\n  return fetch(`${config.path}/${config.cohortId}/cards`, {\r\n    method: \"GET\",\r\n    headers: config.headers,\r\n  }).then(handleRequest);\r\n};\r\n\r\n//Обновление профиля\r\nconst updateProfileByUser = (name, about) => {\r\n  return fetch(`${config.path}/${config.cohortId}/users/me`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: name,\r\n      about: about,\r\n    }),\r\n  }).then(handleRequest);\r\n};\r\n\r\n// замена аватара\r\nconst updateAvatar = (avatarUrl) => {\r\n  return fetch(`${config.path}/${config.cohortId}/users/me/avatar`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: avatarUrl,\r\n    }),\r\n  }).then(handleRequest);\r\n};\r\n\r\n//Добавление новой карточки\r\nconst handleCardAdded = (nameCard, linkCard) => {\r\n  return fetch(`${config.path}/${config.cohortId}/cards`, {\r\n    method: \"POST\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: nameCard,\r\n      link: linkCard,\r\n    }),\r\n  }).then(handleRequest);\r\n};\r\n\r\n//Добавление лайка\r\nconst addLike = (cardId) => {\r\n  return fetch(`${config.path}/${config.cohortId}/cards/likes/${cardId}`, {\r\n    method: \"PUT\",\r\n    headers: config.headers,\r\n  }).then(handleRequest);\r\n};\r\n\r\n//Снятие лайка\r\nconst deleteLike = (cardId) => {\r\n  return fetch(`${config.path}/${config.cohortId}/cards/likes/${cardId}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  }).then(handleRequest);\r\n};\r\n\r\n//Удаление карточки\r\nconst deleteCard = (cardId) => {\r\n  return fetch(`${config.path}/${config.cohortId}/cards/${cardId}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  }).then(handleRequest);\r\n};\r\n\r\nexport {\r\n  updateProfileByUser,\r\n  updateAvatar,\r\n  handleCardAdded,\r\n  deleteCard,\r\n  addLike,\r\n  deleteLike,\r\n  getUserProfile,\r\n  getCards,\r\n};\r\n","// @todo: Темплейт карточки\r\nconst cardTemplate = document.querySelector(\"#card-template\").content;\r\n// DOM узлы\r\nconst placesList = document.querySelector(\".places__list\"); //Карточка\r\n\r\nimport { openModal, closeModal } from \"./modal.js\";\r\n\r\nimport { deleteCard, addLike, deleteLike, handleImageClick } from \"./api.js\";\r\n\r\nfunction createCard(card, user) {\r\n  const cardElement = cardTemplate\r\n    .querySelector(\".places__item\")\r\n    .cloneNode(true); // клонирование\r\n\r\n  const cardImage = cardElement.querySelector(\".card__image\"); // картинка определение константы\r\n  cardElement.querySelector(\".card__title\").textContent = card.name; //название карточки\r\n  cardImage.alt = card.name; // название изображения\r\n  cardImage.src = card.link; // ссылка на изображение\r\n  //лайки на карточке\r\n  const countLike = cardElement.querySelector(\".card__like-count\"); //счетчик кнопки лайк\r\n  const likeButton = cardElement.querySelector(\".card__like-button\"); //кнопка лайк\r\n  countLike.textContent = card.likes.length;\r\n\r\n  //обработчик открытия попапа/картинка\r\n  cardImage.addEventListener(\"click\", function () {\r\n    handleImageClick(card.link, card.name);\r\n  });\r\n\r\n  //установка лайка при перезагрузке\r\n  if (card.likes.some((like) => like._id === user)) {\r\n    likeButton.classList.add(\"card__like-button_is-active\");\r\n  }\r\n\r\n  //обработчик лайка карточки\r\n  cardElement\r\n    .querySelector(\".card__like-button\")\r\n    .addEventListener(\"click\", function (evt) {\r\n      if (likeButton.classList.contains(\"card__like-button_is-active\")) {\r\n        deleteLike(card._id)\r\n          .then((card) => {\r\n            likeButton.classList.toggle(\"card__like-button_is-active\");\r\n            countLike.textContent = card.likes.length;\r\n          })\r\n          .catch((error) => console.error(\"Ошибка удаления лайка:\", error));\r\n      } else {\r\n        addLike(card._id)\r\n          .then((card) => {\r\n            likeButton.classList.toggle(\"card__like-button_is-active\");\r\n            countLike.textContent = card.likes.length;\r\n          })\r\n          .catch((error) => console.error(\"Ошибка добавления лайка:\", error));\r\n      }\r\n    });\r\n\r\n  const popupDeleteCard = document.querySelector(\r\n    \".popup_type_submit-delete-card\"\r\n  );\r\n\r\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\r\n\r\n  //обработчик открытия попапа удаления карточки\r\n  deleteButton.addEventListener(\"click\", () =>\r\n    openDeleteModal(cardElement, card._id)\r\n  );\r\n\r\n  cardElement.dataset.id = card._id;\r\n\r\n  return cardElement; // возвращение\r\n}\r\n\r\n//функция лайка карточки\r\nfunction likeCard(evt) {\r\n  evt.target.classList.toggle(\"card__like-button_is-active\");\r\n}\r\n\r\nexport { openModal, createCard, likeCard, placesList };\r\n","//функция открытия попапа\r\nconst openModal = (modal) => {\r\n  modal.classList.add(\"popup_is-animated\"); // анимация\r\n  setTimeout(() => {\r\n    modal.classList.add(\"popup_is-opened\"); // открытие\r\n  }, 1);\r\n\r\n  // Навешиваем обработчик Escape\r\n  document.addEventListener(\"keydown\", handleEscape);\r\n};\r\n\r\n//функция закрытия попапа\r\nfunction closeModal(modal) {\r\n  modal.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keydown\", handleEscape);\r\n}\r\n\r\n// Функция обработки нажатия клавиши Escape\r\nfunction handleEscape(evt) {\r\n  if (evt.key === \"Escape\") {\r\n    const openedPopup = document.querySelector(\".popup_is-opened\");\r\n    if (openedPopup) {\r\n      closeModal(openedPopup);\r\n    }\r\n  }\r\n}\r\n\r\nexport { openModal, closeModal };\r\n","//формы\r\nconst formElement = document.querySelector(\".popup__form\");\r\nconst formInput = document.querySelector(\".popup__input\");\r\nconst formButton = document.querySelector(\".popup__button\");\r\n\r\n// Функция, которая включает валидацию для всех форм\r\nconst enableValidation = (settings) => {\r\n  const formList = Array.from(document.querySelectorAll(settings.formSelector));\r\n  formList.forEach((formElement) => {\r\n    formElement.addEventListener(\"submit\", (evt) => {\r\n      evt.preventDefault();\r\n    });\r\n    setEventListeners(formElement, settings);\r\n  });\r\n};\r\n\r\n// Функция, которая добавляет класс с ошибкой\r\nconst showInputError = (formElement, formInput, errorMessage, settings) => {\r\n  const errorElement = formElement.querySelector(`.${formInput.id}-error`);\r\n  // Остальной код такой же\r\n  formInput.classList.add(settings.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(settings.errorClass);\r\n};\r\n\r\n// Функция, которая удаляет класс с ошибкой\r\nconst hideInputError = (formElement, formInput, settings) => {\r\n  // Находим элемент ошибки\r\n  const errorElement = formElement.querySelector(`.${formInput.id}-error`);\r\n\r\n  formInput.classList.remove(settings.inputErrorClass);\r\n  errorElement.classList.remove(settings.errorClass);\r\n  errorElement.textContent = \"\";\r\n};\r\n\r\n// Функция, которая проверяет валидность поля\r\nconst isValid = (formElement, formInput, settings) => {\r\n  if (formInput.validity.patternMismatch) {\r\n    // встроенный метод setCustomValidity принимает на вход строку\r\n    // и заменяет ею стандартное сообщение об ошибке\r\n    formInput.setCustomValidity(formInput.dataset.errorMessage);\r\n  } else {\r\n    // если передать пустую строку, то будут доступны\r\n    // стандартные браузерные сообщения\r\n    formInput.setCustomValidity(\"\");\r\n  }\r\n  if (!formInput.validity.valid) {\r\n    showInputError(\r\n      formElement,\r\n      formInput,\r\n      formInput.validationMessage,\r\n      settings\r\n    );\r\n  } else {\r\n    // hideInputError теперь получает параметром форму, в которой\r\n    // находится проверяемое поле, и само это поле\r\n    hideInputError(formElement, formInput, settings);\r\n  }\r\n};\r\n\r\nconst setEventListeners = (formElement, settings) => {\r\n  // Находим все поля внутри формы\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(settings.inputSelector)\r\n  );\r\n  const formButtonList = Array.from(\r\n    formElement.querySelectorAll(settings.submitButtonSelector)\r\n  );\r\n  //переключение кнопки\r\n  toggleButtonState(inputList, formButtonList, settings);\r\n\r\n  // Обойдём все элементы полученной коллекции\r\n  inputList.forEach((formInput) => {\r\n    // каждому полю добавим обработчик события input\r\n    formInput.addEventListener(\"input\", function () {\r\n      isValid(formElement, formInput, settings);\r\n      toggleButtonState(inputList, formButtonList, settings);\r\n    });\r\n  });\r\n};\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((formInput) => {\r\n    return !formInput.validity.valid;\r\n  });\r\n};\r\n\r\nconst toggleButtonState = (inputList, formButtonList, settings) => {\r\n  formButtonList.forEach((formButton) => {\r\n    formButton.disabled = true;\r\n    if (hasInvalidInput(inputList)) {\r\n      formButton.disabled = true;\r\n      formButton.classList.add(settings.inactiveButtonClass);\r\n    } else {\r\n      formButton.disabled = false;\r\n      formButton.classList.remove(settings.inactiveButtonClass);\r\n    }\r\n  });\r\n};\r\n\r\n// Функция, которая очищает ошибки валидации формы и делает кнопку неактивной\r\nconst clearValidation = (formElement, settings) => {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(settings.inputSelector)\r\n  );\r\n  const formButtonList = Array.from(\r\n    formElement.querySelectorAll(settings.submitButtonSelector)\r\n  );\r\n\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, settings);\r\n    inputElement.value = \"\"; // очищаем значение поля\r\n  });\r\n  toggleButtonState(inputList, formButtonList, settings);\r\n};\r\n\r\nexport { enableValidation, clearValidation, formButton };\r\n","// @todo: DOM узлы\r\nconst buttonAddCard = document.querySelector(\".profile__add-button\"); //Кнопка_+\r\nconst buttonProfileEdit = document.querySelector(\".profile__edit-button\"); //Кнопка_edit\r\nconst popupEdit = document.querySelector(\".popup_type_edit\"); //Попап редактирования профиля\r\nconst popupAddCard = document.querySelector(\".popup_type_new-card\"); //Попап создания новой карточки\r\n//константы формы добавления карточки\r\nconst popupFormImg = document.forms[\"new-place\"];\r\nconst formImgName = popupFormImg.elements[\"place-name\"];\r\nconst formImgLink = popupFormImg.elements[\"link\"];\r\n//константы формы редактирования профиля\r\nconst popupFormProfile = document.forms[\"edit-profile\"];\r\nconst nameInput = popupFormProfile.elements[\"name\"];\r\nconst jobInput = popupFormProfile.elements[\"description\"];\r\nconst profileTitle = document.querySelector(\".profile__title\");\r\nconst profileSubtitle = document.querySelector(\".profile__description\");\r\n//константы модального окна картинки\r\nconst popImage = document.querySelector(\".popup__image\"); //картинка в модальном окне\r\nconst popImageDescription = document.querySelector(\".popup__caption\");\r\nconst popupImage = document.querySelector(\".popup_type_image\"); //Попап открытия картинки\\\r\n//константы профиля\r\nconst avatarElement = document.querySelector(\".profile__image\");\r\nconst avatarButton = document.querySelector(\".profile__image-button\");\r\n//попап редактирования автара\r\nconst popupAvatar = document.querySelector(\".popup_type_new-avatar\");\r\nconst avatarInput = document.querySelector(\".popup__input_type-vatar-link\");\r\nlet userId = \"\";\r\n//карточки\r\nlet currentCardElement = null;\r\nlet currentCardId = null;\r\n//попап удаления карточки\r\nconst popupDeleteCard = document.querySelector(\r\n  \".popup_type_submit-delete-card\"\r\n);\r\nconst buttonDeletePopup = popupDeleteCard.querySelector(\".popup__button\");\r\n\r\nimport \"../index.css\";\r\nimport { createCard, likeCard, placesList } from \"./cards.js\";\r\nimport { openModal, closeModal } from \"./modal.js\";\r\nimport { enableValidation, clearValidation } from \"./validation.js\";\r\n\r\nimport {\r\n  updateProfileByUser,\r\n  updateAvatar,\r\n  handleCardAdded,\r\n  getUserProfile,\r\n  getCards,\r\n} from \"./api.js\";\r\n\r\n//Функции----------------------------------------------------------------\r\n\r\nconst validationSettings = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"button_inactive\",\r\n  inputErrorClass: \"form__input-error\",\r\n  errorClass: \"form__input-error_active\",\r\n};\r\n\r\n// Вызов функции для включения валидации с переданными настройками\r\nenableValidation(validationSettings);\r\n\r\n//Объединенение запросов для получения данных пользователя и карточек\r\nconst getPromisesUserCards = () => {\r\n  Promise.all([getUserProfile(), getCards()])\r\n    .then(([userData, cardsData]) => {\r\n      //данные пользователя\r\n      profileTitle.textContent = userData.name;\r\n      profileSubtitle.textContent = userData.about;\r\n      avatarElement.style.backgroundImage = `url(${userData.avatar})`;\r\n      userId = userData._id;\r\n\r\n      // Обработка данных карточек\r\n      cardsData.forEach((cardData) => {\r\n        const cardElement = createCard(cardData, userId);\r\n        if (cardData.owner._id !== userId) {\r\n          cardElement.querySelector(\".card__delete-button\").remove();\r\n        }\r\n        placesList.append(cardElement);\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Произошла ошибка\", error);\r\n    });\r\n};\r\n\r\n//функция добавления новой карточки пользователем\r\nfunction handleCardFormSubmit(evt) {\r\n  evt.preventDefault();\r\n  const name = formImgName.value;\r\n  const link = formImgLink.value;\r\n  changeNameButton(true);\r\n\r\n  handleCardAdded(name, link)\r\n    .then((cardData) => {\r\n      placesList.prepend(createCard(cardData, { likeCard, openModal }));\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Произошла ошибка при добавлении карточки\", error);\r\n    })\r\n    .finally(() => {\r\n      changeNameButton(false);\r\n    });\r\n  closeModal(popupAddCard);\r\n  evt.target.reset();\r\n}\r\n\r\n// Функция открытия модального окна с картинкой\r\nconst handleImageClick = (imageSrc, imageDescription) => {\r\n  if (popImage) {\r\n    popImage.src = imageSrc;\r\n    popImage.alt = imageDescription;\r\n    popImageDescription.textContent = imageDescription;\r\n  }\r\n  openModal(popupImage);\r\n};\r\n\r\n//функция открытия попапа удаления карточки\r\nfunction openDeleteModal(cardElement, cardId) {\r\n  currentCardElement = cardElement;\r\n  currentCardId = cardId; //сохранение id карточки для удаления\r\n  openModal(popupDeleteCard);\r\n}\r\n\r\n//Обработчик удаления карточки\r\n\r\n//функция замены аватара\r\nconst handleAvatarForm = (evt) => {\r\n  evt.preventDefault();\r\n  const avatarUrl = avatarInput.value;\r\n  changeNameButton(true);\r\n  updateAvatar(avatarUrl)\r\n    .then((data) => {\r\n      avatarElement.style.backgroundImage = `url(${data.avatar})`;\r\n      closeModal(popupAvatar);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Произошла ошибка при замене аватара\", error);\r\n    })\r\n    .finally(() => {\r\n      changeNameButton(false);\r\n    });\r\n  evt.target.reset();\r\n};\r\n\r\n//Функция, смены названия кнопки при обработке данных в попапе\r\nconst changeNameButton = (isLoading) => {\r\n  const formButtonList = document.querySelectorAll(\".popup__button\");\r\n  formButtonList.forEach((formButton) => {\r\n    if (formButton.textContent !== \"Да\") {\r\n      formButton.textContent = isLoading ? \"Сохранение..\" : \"Сохранить\";\r\n    }\r\n  });\r\n};\r\n\r\n//Вызовы функций\r\ngetPromisesUserCards();\r\n\r\n//Обработчики событий----------------------------------------------------------------\r\n// обработчики событий при загрузке\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  setupEventListeners();\r\n});\r\n\r\n// Обработчики событий для всех модальных окон\r\nfunction setupEventListeners() {\r\n  document.querySelectorAll(\".popup\").forEach((modal) => {\r\n    modal.querySelectorAll(\".popup__close\").forEach((button) => {\r\n      button.addEventListener(\"click\", () => closeModal(modal));\r\n    });\r\n\r\n    modal.addEventListener(\"click\", (evt) => {\r\n      if (evt.target === modal) {\r\n        closeModal(modal);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n//Обработчик удаления карточки в попапе удаления карточки\r\nbuttonDeletePopup.addEventListener(\"click\", function () {\r\n  deleteCard(currentCardId)\r\n    .then(() => {\r\n      const cardToDeleteElement = document.querySelector(\r\n        `[data-id=\"${currentCardId}\"]`\r\n      );\r\n      if (cardToDeleteElement) {\r\n        cardToDeleteElement.remove();\r\n      } else {\r\n        console.error(`Карточка с id ${currentCardId} не найдена`);\r\n      }\r\n      closeModal(popupDeleteCard); // закрытие попапа после удаления\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Ошибка удаления карточки:\", error);\r\n    });\r\n});\r\n\r\n//Обработчик «отправки» формы\r\nfunction handleProfileFormSubmit(evt) {\r\n  evt.preventDefault();\r\n  //поля формы\r\n  const nameValue = nameInput.value;\r\n  const jobValue = jobInput.value;\r\n\r\n  updateProfileByUser(nameValue, jobValue)\r\n    .then((data) => {\r\n      profileTitle.textContent = data.name;\r\n      profileSubtitle.textContent = data.about;\r\n      return data;\r\n    })\r\n    .catch((error) => {\r\n      console.error(\r\n        \"Произошла ошибка при обновлении данных пользователя\",\r\n        error\r\n      );\r\n    });\r\n\r\n  closeModal(popupEdit);\r\n}\r\n\r\n//обработчик «отправки» формы\r\npopupFormProfile.addEventListener(\"submit\", handleProfileFormSubmit);\r\n\r\n//обработчик открытия попапа/профиль\r\nbuttonProfileEdit.addEventListener(\"click\", function () {\r\n  //значения в модальном окне редактирования профиля\r\n  nameInput.value = profileTitle.textContent;\r\n  jobInput.value = profileSubtitle.textContent;\r\n  openModal(popupEdit);\r\n  clearValidation(popupEdit, validationSettings);\r\n});\r\n\r\n//обработчик открытия попапа/добавления\r\nbuttonAddCard.addEventListener(\"click\", function () {\r\n  openModal(popupAddCard);\r\n  clearValidation(popupAddCard, validationSettings);\r\n});\r\n\r\n//обработчик добавки новой карточки\r\npopupFormImg.addEventListener(\"submit\", handleCardFormSubmit);\r\n\r\n//Аватар------\r\n//Обработчик наведения на аватар/mouseover\r\navatarElement.addEventListener(\"mouseover\", () => {\r\n  avatarButton.classList.add(\"profile__image-button_active\");\r\n});\r\n\r\n//Обработчик наведения на аватар/mouseout\r\navatarElement.addEventListener(\"mouseout\", (evt) => {\r\n  if (!avatarElement.contains(evt.relatedTarget)) {\r\n    avatarButton.classList.remove(\"profile__image-button_active\");\r\n  }\r\n});\r\n\r\n//обработчик открытия редактирования аватара\r\navatarButton.addEventListener(\"click\", function () {\r\n  openModal(popupAvatar);\r\n  clearValidation(popupAvatar, validationSettings);\r\n});\r\n\r\n//обработчик «отправки» нового аватара\r\npopupAvatar.addEventListener(\"submit\", handleAvatarForm);\r\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","config","path","cohortId","headers","authorization","handleRequest","res","ok","json","Promise","reject","concat","status","getUserProfile","fetch","method","then","getCards","updateProfileByUser","name","about","body","JSON","stringify","updateAvatar","avatarUrl","avatar","handleCardAdded","nameCard","linkCard","link","addLike","cardId","deleteLike","cardTemplate","document","querySelector","content","placesList","createCard","card","user","cardElement","cloneNode","cardImage","textContent","alt","src","countLike","likeButton","likes","length","addEventListener","handleImageClick","some","like","_id","classList","add","evt","contains","toggle","error","console","openDeleteModal","dataset","id","likeCard","target","openModal","modal","setTimeout","handleEscape","closeModal","remove","removeEventListener","openedPopup","hideInputError","formElement","formInput","settings","errorElement","inputErrorClass","errorClass","toggleButtonState","inputList","formButtonList","forEach","formButton","disabled","validity","valid","hasInvalidInput","inactiveButtonClass","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonSelector","inputElement","buttonAddCard","buttonProfileEdit","popupEdit","popupAddCard","popupFormImg","forms","formImgName","elements","formImgLink","popupFormProfile","nameInput","jobInput","profileTitle","profileSubtitle","avatarElement","avatarButton","popupAvatar","avatarInput","userId","currentCardId","popupDeleteCard","buttonDeletePopup","validationSettings","formSelector","preventDefault","patternMismatch","setCustomValidity","errorMessage","showInputError","validationMessage","isValid","setEventListeners","changeNameButton","isLoading","all","_ref","_ref2","userData","cardsData","style","backgroundImage","cardData","owner","append","button","deleteCard","cardToDeleteElement","nameValue","jobValue","data","prepend","reset","relatedTarget"],"sourceRoot":""}